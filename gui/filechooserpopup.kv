<LoadFileChooserPopup>: # sub-class of FileChooserPopup, which derives from
						# AbstractPopup, which derives from Popup
	popupBoxLayout: popup_boxlayout
	diskRecycleBoxLayout: disc_mem_RB_layout
	fileChooser: file_chooser
	pathList: path_mem_list
	gridLayoutPathField: grid_layout_path_field
	currentPathField: text_path_load
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			id: popup_boxlayout
			orientation: 'vertical'
			#size_hint_y: 0.17 # value for Windows 10
			#size_hint_y: 0.11 # value for Android tablet
			size_hint_y: 0.16 # value for Android smartphone
			RecycleView:
				id: path_mem_list
				effect_cls: "ScrollEffect" # prevents overscrolling
				viewclass: 'SelectableLabelFileChooser'
				scroll_type: ['bars', 'content']
				scroll_wheel_distance: dp(114)
				bar_width: dp(10)
				scroll_y: 1 # 0 forces scrolling to list bottom after adding
							# an item, 1 forces scrolling to list top
				effect_cls: "ScrollEffect" # prevents overscrolling
				SelectableRecycleBoxLayoutFileChooser:
					id: disc_mem_RB_layout
					key_selection: 'selectable' # required so that 'selectable'
												# key/value can be added to
												# RecycleView data items
					default_size: None, dp(28)
					default_size_hint: 1, None
					size_hint_y: None
					height: self.minimum_height
					orientation: 'vertical'
					multiselect: False
					touch_multiselect: False
					spacing: dp(2)

		BoxLayout:
			orientation: 'vertical'

			FileChooserListView:
				id: file_chooser
				dirselect: True
				on_selection: text_path_load.text = self.selection and self.selection[0] or ''

			GridLayout:
				id: grid_layout_path_field
				#size_hint_y: 0.023 # tablet
				#size_hint_y: 0.035 # smartphone
				size_hint_y: 0.12 # Windows
				cols: 2
				GridLayout:
					rows: 1
					TextInput:
						id: text_path_load
						font_size: '15sp'
						multiline: False
						readonly: True

			GridLayout:
				cols: 2
				size_hint_y: None
				height: '28dp'
				Button:
					text: "Cancel"
					on_release: root.cancel()
				Button:
					text: "Load"
					on_release: root.load(file_chooser.path, file_chooser.selection)

<SaveFileChooserPopup>: # sub-class of FileChooserPopup, which derives from
						# AbstractPopup, which derives from Popup
	popupBoxLayout: popup_boxlayout
	diskRecycleBoxLayout: disc_mem_RB_layout
	fileChooser: file_chooser
	pathList: path_mem_list
	gridLayoutPathField: grid_layout_path_field
	currentPathField: path_file_name_text_input
	loadAtStartChkBox: load_at_start_chk_box
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			id: popup_boxlayout
			orientation: 'vertical'
			#size_hint_y: 0.17 # value for Windows 10
			#size_hint_y: 0.11 # value for Android tablet
			size_hint_y: 0.16 # value for Android smartphone
			RecycleView:
				id: path_mem_list
				effect_cls: "ScrollEffect" # prevents overscrolling
				viewclass: 'SelectableLabelFileChooser'
				scroll_type: ['bars', 'content']
				scroll_wheel_distance: dp(114)
				bar_width: dp(10)
				scroll_y: 1 # 0 forces scrolling to list bottom after adding
							# an item, 1 forces scrolling to list top
				effect_cls: "ScrollEffect" # prevents overscrolling
				SelectableRecycleBoxLayoutFileChooser:
					id: disc_mem_RB_layout
					key_selection: 'selectable' # required so that 'selectable'
												# key/value can be added to
												# RecycleView data items
					default_size: None, dp(28)
					default_size_hint: 1, None
					size_hint_y: None
					height: self.minimum_height
					orientation: 'vertical'
					multiselect: False
					touch_multiselect: False
					spacing: dp(2)

		BoxLayout:
			orientation: 'vertical'

			FileChooserListView:
				id: file_chooser
				dirselect: True
				on_selection: path_file_name_text_input.text = self.selection and self.selection[0] or ''

			GridLayout:
				id: grid_layout_path_field
				#size_hint_y: 0.023 # tablet
				#size_hint_y: 0.035 # smartphone
				size_hint_y: 0.12 # Windows
				cols: 2
				GridLayout:
					rows: 1
					TextInput:
						id: path_file_name_text_input
						font_size: '15sp'
						multiline: False
						readonly: False
						on_text: root.updateLoadAtStartCheckBox()
					CheckBox:
						id: load_at_start_chk_box
						#size_hint_x: 0.17 # smartphone
						size_hint_x: 0.06 # tablet, Windows
						on_press: root.toggleLoadAtStart(self.active)

			GridLayout:
				cols: 2
				size_hint_y: None
				height: '28dp'
				Button:
					text: "Cancel"
					on_release: root.cancel()
				Button:
					text: "Save"
					on_release: root.save(file_chooser.path, path_file_name_text_input.text, load_at_start_chk_box.active)

<SelectableLabelFileChooser>:
	# Draw a background to indicate selection
	canvas.before:
		Color:
			rgba: (1, 0, 0, 1) if self.selected else (.0, 0.9, .1, .3)
		Rectangle:
			pos: self.pos
			size: self.size
		Color:
			rgba: (0, 0.9, .1, .3)
		Rectangle:
			pos: self.pos
			size: self.size
