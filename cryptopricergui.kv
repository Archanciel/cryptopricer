# ---------- cryptopricergui.kv  ----------

#: import main cryptopricergui
#: import ScrollEffect kivy.effects.scroll.ScrollEffect
#: import CheckBox kivy.uix.checkbox.CheckBox

<CryptoPricerGUI>:
	orientation: "vertical"
	#optimizing app size for your smartphone with Messagease keyboard
	size_hint: 1, .62
	pos_hint: {'x' : 0, 'y' : .38}
	requestInput: request_TextInput
	requestListRV: request_RecycleView_list
	resultOutput: ro_output_TextInput
	toggleHistoButton: toggle_history_list_Button
	deleteButton: delete_Button
	replaceButton: replace_Button
	replayAllButton: replay_all_Button
	moveUpButton: moveUp_Button
	moveDownButton: moveDown_Button
	boxLayoutContainingStatusBar: boxlayout_statusbar
	statusBarScrollView: scrlv_status_bar
	statusBarTextInput: status_bar
	clearResultOutputButton: clear_output_Button
	toggleAppSizeButton: toggle_app_size_Button
	requestListRVSelBoxLayout: selectable_recyclebox_layout
	boxLayoutContainingRV: boxlayout_recycleview

	# adding main windows borders. Does not impact sub widgets !
	padding: 5
	spacing: 5

	canvas.before:
		Color:
			rgb: [0.22,0.22,0.22]
		Rectangle:
			pos: self.pos
			size: self.size

	BoxLayout:
		size_hint_y: None
		height: "28dp"
		canvas.before:
			Color:
				rgb: [0,0,0]
			Rectangle:
				pos: self.pos
				size: self.size

		GridLayout:
			cols: 2
			TextInput:
				id: request_TextInput
				background_color: 0,0,0,0
				foreground_color: 1,1,1,1
				focus: True
				multiline: False
				#ENTER triggers root.submitRequest()
				on_text_validate: root.submitRequest()
				on_text: root.ensureLowercase()
			Button:
				id: toggle_app_size_Button
				text: 'Full'
				size_hint_x: None
				width: 130
				on_press: root.toggleAppPosAndSize()

	BoxLayout:
		size_hint_y: None
		height: "28dp"
		ToggleButton:
			id: toggle_history_list_Button
			text: "History"
			size_hint_x: 15
			disabled:True
			on_press: root.toggleRequestList()
		Button:
			id: delete_Button
			text: "Delete"
			size_hint_x: 15
			disabled: True
			on_press: root.deleteRequest()
		Button:
			id: replace_Button
			text: "Replace"
			size_hint_x: 15
			disabled: True
			on_press: root.replaceRequest()
		Button:
			id: moveUp_Button
			size_hint_x: 8
			disabled: True
			on_press: selectable_recyclebox_layout.moveItemUp()
			StackLayout:
				pos: self.parent.pos
				size: self.parent.size
				orientation: 'lr-tb'
				Image:
					source: 'arrow-up-32-disabled.png' if self.parent.disabled else 'arrow-up-32.png'
					size_hint_x: 1
					width: 74
		Button:
			id: moveDown_Button
			size_hint_x: 8
			disabled: True
			on_press: selectable_recyclebox_layout.moveItemDown()
			StackLayout:
				pos: self.parent.pos
				size: self.parent.size
				orientation: 'lr-tb'
				Image:
					source: 'arrow-down-32-disabled.png' if self.parent.disabled else 'arrow-down-32.png'
					size_hint_x: 1
					width: 74
		Button:
			id: replay_all_Button
			text: "Repl All"
			size_hint_x: 15
			disabled: True
			on_press: root.replayAllRequests()
		Button:
			id: menu_Button
			text: "..."
			size_hint_x: 13
			on_release: root.openDropDownMenu(self)

	BoxLayout:
		id: boxlayout_recycleview
		size_hint_y: None
		height: "0dp"

		RecycleView:
			id: request_RecycleView_list
			scroll_y: 0 # forces scrolling to list bottom after adding an entry
			effect_cls: "ScrollEffect" # prevents overscrolling
			viewclass: 'SelectableLabel'
			scroll_type: ['bars', 'content']
			scroll_wheel_distance: dp(114)
			bar_width: dp(10)

			SelectableRecycleBoxLayout:
				id: selectable_recyclebox_layout
				cryptoPricerGUI: root
				key_selection: 'selectable' # required so that 'selectable'
											# key/value can be added to
											# RecycleView data items
				default_size: None, dp(15)
				default_size_hint: 1, None
				size_hint_y: None
				height: self.minimum_height
				spacing: 0.5
				orientation: 'vertical'
				multiselect: False
				touch_multiselect: False

	ScrollView:
		id: scrlv_out
		canvas.before:
			Color:
				rgb: [0,0,0]
			Rectangle:
				pos: self.pos
				size: self.size
		effect_cls: ScrollEffect #prevents overscrolling
		scroll_y: 0 # forces scrolling to bottom after adding text
		TextInput:
			id: ro_output_TextInput
			size_hint: (1, None)
			height: max(self.minimum_height, scrlv_out.height) #required to enable scrolling when output starts to grow
			readonly: True
			background_color: 0,0,0,0
			foreground_color: 1,1,1,1

	BoxLayout:
		id: boxlayout_statusbar
		size_hint_y: None
		height: "43dp" # enables two lines display for fiat computation formula
		canvas.before:
			Color:
				rgb: [0,0,0]
			Rectangle:
				pos: self.pos
				size: self.size

		GridLayout:
			cols: 2
			ScrollView:
				id: scrlv_status_bar
#				do_scroll_y: False # limiting to horizontal scrolling
				effect_cls: ScrollEffect #prevents overscrolling
				TextInput:
					id: status_bar
					size_hint: (None, 1) # if remooved, scrolling no longer working. 1 required for correct 2 lines display !
					background_color: 0,0,0,0
					foreground_color: 1,1,1,1
					width: scrlv_status_bar.width
					readonly: True
					multiline: True
					on_text: root.statusBarTextChanged()
			Button:
				id: clear_output_Button
				text: 'Clear'
				size_hint_x: None
				width: 130
				disabled: True
				on_press: root.clearOutput()

<SelectableLabel>:
	# Draw a background to indicate selection
	canvas.before:
		Color:
			rgba: (1, 0, 0, 1) if self.selected else (.0, 0.9, .1, .3)
		Rectangle:
			pos: self.pos
			size: self.size
		Color:
			rgba: (0, 0.9, .1, .3)

<CustomDropDown>
	saveButton: save_Button
	statusToRequestInputButton: status_to_request_input_Button
	Button:
		text: 'Load'
		size_hint_y: None
		height: '28dp'
		on_release: root.showLoad()
	Button:
		id: save_Button
		text: 'Save'
		size_hint_y: None
		height: '28dp'
		disabled: True
		on_release: root.showSave()
	Button:
		id: status_to_request_input_Button
		text: 'Status >'
		size_hint_y: None
		height: '28dp'
		disabled: True
		on_release: root.copyStatusBarStrToRequestEntry()
	Button:
		text: "Settings"
		size_hint_y: None
		height: '28dp'
		on_press: app.open_settings()
	Button:
		text: 'Help'
		size_hint_y: None
		height: '28dp'
		on_release: root.help()

<ScrollablePopup>:
	id: scr_popup
	auto_dismiss: False
	contentBox: content_box
	scrollView: scroll_view
	nextPageButton: next_page_button
	prevPageButton: prev_page_button

	BoxLayout:
		id: content_box
		orientation: "vertical"
		content: content_text

		ScrollView:
			id: scroll_view
			effect_cls: "ScrollEffect" # prevents overscrolling
			do_scroll_x: False # limiting to vertical scrolling
			Label:
				id: content_text
				size_hint_y: None
				height: self.texture_size[1]
				text_size: (self.width-20), None
				line_height: 0.9
				valign: "top"
				markup: True

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: '40dp'
			Button:
			    id: prev_page_button
				text: "Previous page"
				on_press: scr_popup.previousPage()
			Button:
			    id: next_page_button
				text: "Next page"
				on_press: scr_popup.nextPage()
			Button:
				text: "Close"
				on_press: root.dismiss()

<LoadFileChooserBoxLayout>: # sub-class of FileChooserBoxLayout
	popupBoxLayout: popup_boxlayout
	diskRecycleBoxLayout: disc_mem_RB_layout
	fileChooser: file_chooser
	pathList: path_mem_list
	gridLayoutPathField: grid_layout_path_field
	currentPathField: text_path_load
	orientation: 'vertical'
	BoxLayout:
		id: popup_boxlayout
		orientation: 'vertical'
		#size_hint_y: 0.17 # value for Windows 10
		#size_hint_y: 0.11 # value for Android tablet
		size_hint_y: 0.16 # value for Android smartphone
		RecycleView:
			id: path_mem_list
			effect_cls: "ScrollEffect" # prevents overscrolling
			viewclass: 'SelectableLabelFileChooser'
			scroll_type: ['bars', 'content']
			scroll_wheel_distance: dp(114)
			bar_width: dp(10)
			scroll_y: 1 # 0 forces scrolling to list bottom after adding
						# an item, 1 forces scrolling to list top
			effect_cls: "ScrollEffect" # prevents overscrolling
			SelectableRecycleBoxLayoutFileChooser:
				id: disc_mem_RB_layout
				key_selection: 'selectable' # required so that 'selectable'
											# key/value can be added to
											# RecycleView data items
				default_size: None, dp(28)
				default_size_hint: 1, None
				size_hint_y: None
				height: self.minimum_height
				orientation: 'vertical'
				multiselect: False
				touch_multiselect: False
				spacing: dp(2)

	BoxLayout:
		orientation: 'vertical'

		FileChooserListView:
			id: file_chooser
			dirselect: True
			on_selection: text_path_load.text = self.selection and self.selection[0] or ''

        GridLayout:
            id: grid_layout_path_field
            #size_hint_y: 0.023 # tablet
            #size_hint_y: 0.035 # smartphone
            size_hint_y: 0.12 # Windows
            cols: 2
            GridLayout:
                rows: 1
                TextInput:
                    id: text_path_load
                    font_size: '15sp'
                    multiline: False
                    readonly: True

		GridLayout:
			cols: 2
			size_hint_y: None
			height: '28dp'
			Button:
				text: "Cancel"
				on_release: root.cancel()
			Button:
				text: "Load"
				on_release: root.load(file_chooser.path, file_chooser.selection)

<SaveFileChooserBoxLayout>: # sub-class of FileChooserBoxLayout
	popupBoxLayout: popup_boxlayout
	diskRecycleBoxLayout: disc_mem_RB_layout
	fileChooser: file_chooser
	pathList: path_mem_list
	gridLayoutPathField: grid_layout_path_field
	currentPathField: path_file_name_text_input
	loadAtStartChkBox: load_at_start_chk_box
	orientation: 'vertical'
	BoxLayout:
		id: popup_boxlayout
		orientation: 'vertical'
		#size_hint_y: 0.17 # value for Windows 10
		#size_hint_y: 0.11 # value for Android tablet
		size_hint_y: 0.16 # value for Android smartphone
		RecycleView:
			id: path_mem_list
			effect_cls: "ScrollEffect" # prevents overscrolling
			viewclass: 'SelectableLabelFileChooser'
			scroll_type: ['bars', 'content']
			scroll_wheel_distance: dp(114)
			bar_width: dp(10)
			scroll_y: 1 # 0 forces scrolling to list bottom after adding
						# an item, 1 forces scrolling to list top
			effect_cls: "ScrollEffect" # prevents overscrolling
			SelectableRecycleBoxLayoutFileChooser:
				id: disc_mem_RB_layout
				key_selection: 'selectable' # required so that 'selectable'
											# key/value can be added to
											# RecycleView data items
				default_size: None, dp(28)
				default_size_hint: 1, None
				size_hint_y: None
				height: self.minimum_height
				orientation: 'vertical'
				multiselect: False
				touch_multiselect: False
				spacing: dp(2)

	BoxLayout:
		orientation: 'vertical'

		FileChooserListView:
			id: file_chooser
			dirselect: True
			on_selection: path_file_name_text_input.text = self.selection and self.selection[0] or ''

        GridLayout:
            id: grid_layout_path_field
            #size_hint_y: 0.023 # tablet
            #size_hint_y: 0.035 # smartphone
            size_hint_y: 0.12 # Windows
            cols: 2
            GridLayout:
                rows: 1
                TextInput:
                    id: path_file_name_text_input
                    font_size: '15sp'
                    multiline: False
                    readonly: False
                    on_text: root.updateLoadAtStartCheckBox()
                CheckBox:
                    id: load_at_start_chk_box
                    #size_hint_x: 0.17 # smartphone
                    size_hint_x: 0.06 # tablet, Windows
                    on_press: root.toggleLoadAtStart(self.active)

		GridLayout:
			cols: 2
			size_hint_y: None
			height: '28dp'
			Button:
				text: "Cancel"
				on_release: root.cancel()
			Button:
				text: "Save"
				on_release: root.save(file_chooser.path, path_file_name_text_input.text, load_at_start_chk_box.active)

<SelectableLabelFileChooser>:
	# Draw a background to indicate selection
	canvas.before:
		Color:
			rgba: (1, 0, 0, 1) if self.selected else (.0, 0.9, .1, .3)
		Rectangle:
			pos: self.pos
			size: self.size
		Color:
			rgba: (0, 0.9, .1, .3)
		Rectangle:
			pos: self.pos
			size: self.size
