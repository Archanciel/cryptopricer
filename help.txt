[b][cg]Requesting RT and historical cryptocurrency prices[/b][/c]

CryptoPricer supports two kinds of requests: full requests and partial requests.

[b][cg]Full request[/c][/b]

<crypto> <unit> <date time> <exchange> <options>

    [b][cy]<crypto>[/c][/b] = crypto currency symbol like btc, but a unit symbol is possible too

    [b][cy]<unit>[/c][/b] = counterparty symbol, crypto or unit currency

    [b][cy]<date time>[/c][/b] more details below

    [b][cy]<exchange>[/c][/b] exchange name like binance or all for average price on all exchanges

    [b][cy]<options>[/c][/b] more details below

<date time> possible values:

    [b][cy]0[/cy][/b] for RT

    [b][cy]21/12[/c][/b] or [b][cy]21/12/19[/c][/b] or [b][cy]21/12/2019[/c][/b]. If no year is specified, current year is assumed. If no time is specified, current time is assumed.

    [b][cy]21/12 8:34[/c][/b] --> current year assumed

    [b][cy]21 8:34[/c][/b] --> here, since no month is specified, current month or previous month is assumed.

    [b][cy]8:34[/c][/b] --> here, since no date is specified, current date is assumed.

[b][cr]WARNING[/c][/b]: specifying time makes sense only for dates not older than 7 days. Prices older
than 7 days are 'close' prices. Since there is no notion of a close price for crypto's,
the last price of the date at UTC 23.59 is returned as 'close' price.

[b]Output price qualifiers[/b]:

    [b][cy]R[/c][/b] = RT

    [b][cy]M[/c][/b] = Minute price (precision at the minute)

    [b][cy]C[/c][/b] = Close price

Examples: assume we are on 16/12/17 at 22:10

[cy]btc usd 0 bittrex[/c] -->
[n]BTC/USD on BitTrex: 16/12/17 22:10R 19120

[cy]eth btc 16/12 13:45 bitfinex[/c] -->
[n]ETH/BTC on Bitfinex: 16/12/17 13:45M 0.03893

[cy]eth btc 13:45 bitfinex[/c] -->
[n]ETH/BTC on Bitfinex: 16/12/17 13:45M 0.03893

[cy]eth btc 15 8:45 bitfinex[/c] -->
[n]ETH/BTC on Bitfinex: 15/12/17 8:45M 0.03782

[cy]eth btc 21/1 13:45 bitfinex[/c] -->
[n]ETH/BTC on Bitfinex: 21/01/17C 0.01185

[cy]btc usd 0 bittrex -v0.01btc[/c] -->
[n]0.01 BTC/191.2 USD on BitTrex: 16/12/17 22:10R 19120

[b][cr]WARNING[/c][/b]: <options> must be specified at the end of the full command price

[b][cg]Partial request[/c][/b]

Once a full request has been entered, it is handy to just change one or more parameters of
the initial command. The app keeps and reuses the parameters which are not redefined.

The partial request parameters are specified using the parms

-c<crypto>
-u<unit>
-d<date>
    <date> can be 0 for RT, dd (current month) or
    dd/mm (current year) or dd/mm/yy or
    dd/mm/yyyy
-t<time>
    <time> format: hh:mm
-e<exchange>

Ex:	continuing from last full request above (eth btc 21/1 13:45 bitfinex)
	-fusd -->
	ETH/USD on Bitfinex: 21/01/17C 0.01185
	
	-d12/05 -fbtc -ekraken
	ETH/BTC on Kraken: 12/05/17 00:00C 0.05005
	
IMPORTANT: entering a full request wipes out  all the previously entered partial request settings !
	
Valuation command -v or -vs or -v0 (zero)
-----------------------------------------

Used to obtain the converted unit/crypto amount at the rate of the last request, or at an up to date RT rate

Command format: -v999.9999ZZZ or -vs999.9999ZZZ, s is a save command option which means the command will be in effect 
across the subsequent partial requests 

Ex: if the last request was btc usd 0 bittrex --> BTC/USD on BitTrex: 16/12/17 22:10R 19120
    -v705.55usd returns
    0.003661088 BTC/700 USD on BitTrex: 16/12/17 22:10R 19120 

    -v0.1btc returns (note that here the RT price went up 20 $ !
    0.01 BTC/1914 USD on BitTrex: 16/12/17 22:10R 19140
	
	if the last request was eth usd 21/11/17 bitfinex --> ETH/USD on Bitfinex: 21/11/17 00:00C 360
    -v0.1eth returns
	0.1 ETH/36 USD on Bitfinex: 21/11/17 00:00C 360

Using -vs instead of -v saves the value command, making it active for all subsequent PARTIAL requests.

There  are two ways cancelling the permanent -vs command:

	1/ enter a full request (which wipes out  all the previously entered partial request settings)
	2/ enter -v0 which cancels the -vs valuation command 
	
So, until the -vs command is cancelled, it stays in effect and impacts the new partial requests !
